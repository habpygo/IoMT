// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/blockchain.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type File struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *File) Reset()         { *m = File{} }
func (m *File) String() string { return proto.CompactTextString(m) }
func (*File) ProtoMessage()    {}
func (*File) Descriptor() ([]byte, []int) {
	return fileDescriptor_a884755cc01e392a, []int{0}
}

func (m *File) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_File.Unmarshal(m, b)
}
func (m *File) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_File.Marshal(b, m, deterministic)
}
func (m *File) XXX_Merge(src proto.Message) {
	xxx_messageInfo_File.Merge(m, src)
}
func (m *File) XXX_Size() int {
	return xxx_messageInfo_File.Size(m)
}
func (m *File) XXX_DiscardUnknown() {
	xxx_messageInfo_File.DiscardUnknown(m)
}

var xxx_messageInfo_File proto.InternalMessageInfo

func (m *File) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Block struct {
	Index                int64    `protobuf:"varint,1,opt,name=Index,proto3" json:"Index,omitempty"`
	Hash                 string   `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash,omitempty"`
	PrevBlockHash        string   `protobuf:"bytes,4,opt,name=prevBlockHash,proto3" json:"prevBlockHash,omitempty"`
	Data                 []string `protobuf:"bytes,5,rep,name=data,proto3" json:"data,omitempty"`
	Macid                string   `protobuf:"bytes,6,opt,name=macid,proto3" json:"macid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Block) Reset()         { *m = Block{} }
func (m *Block) String() string { return proto.CompactTextString(m) }
func (*Block) ProtoMessage()    {}
func (*Block) Descriptor() ([]byte, []int) {
	return fileDescriptor_a884755cc01e392a, []int{1}
}

func (m *Block) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Block.Unmarshal(m, b)
}
func (m *Block) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Block.Marshal(b, m, deterministic)
}
func (m *Block) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Block.Merge(m, src)
}
func (m *Block) XXX_Size() int {
	return xxx_messageInfo_Block.Size(m)
}
func (m *Block) XXX_DiscardUnknown() {
	xxx_messageInfo_Block.DiscardUnknown(m)
}

var xxx_messageInfo_Block proto.InternalMessageInfo

func (m *Block) GetIndex() int64 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *Block) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *Block) GetPrevBlockHash() string {
	if m != nil {
		return m.PrevBlockHash
	}
	return ""
}

func (m *Block) GetData() []string {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Block) GetMacid() string {
	if m != nil {
		return m.Macid
	}
	return ""
}

type SpinOff struct {
	Macid                string   `protobuf:"bytes,1,opt,name=macid,proto3" json:"macid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SpinOff) Reset()         { *m = SpinOff{} }
func (m *SpinOff) String() string { return proto.CompactTextString(m) }
func (*SpinOff) ProtoMessage()    {}
func (*SpinOff) Descriptor() ([]byte, []int) {
	return fileDescriptor_a884755cc01e392a, []int{2}
}

func (m *SpinOff) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpinOff.Unmarshal(m, b)
}
func (m *SpinOff) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpinOff.Marshal(b, m, deterministic)
}
func (m *SpinOff) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpinOff.Merge(m, src)
}
func (m *SpinOff) XXX_Size() int {
	return xxx_messageInfo_SpinOff.Size(m)
}
func (m *SpinOff) XXX_DiscardUnknown() {
	xxx_messageInfo_SpinOff.DiscardUnknown(m)
}

var xxx_messageInfo_SpinOff proto.InternalMessageInfo

func (m *SpinOff) GetMacid() string {
	if m != nil {
		return m.Macid
	}
	return ""
}

type AddFileRequest struct {
	FileName             string   `protobuf:"bytes,1,opt,name=fileName,proto3" json:"fileName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddFileRequest) Reset()         { *m = AddFileRequest{} }
func (m *AddFileRequest) String() string { return proto.CompactTextString(m) }
func (*AddFileRequest) ProtoMessage()    {}
func (*AddFileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a884755cc01e392a, []int{3}
}

func (m *AddFileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddFileRequest.Unmarshal(m, b)
}
func (m *AddFileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddFileRequest.Marshal(b, m, deterministic)
}
func (m *AddFileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddFileRequest.Merge(m, src)
}
func (m *AddFileRequest) XXX_Size() int {
	return xxx_messageInfo_AddFileRequest.Size(m)
}
func (m *AddFileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddFileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddFileRequest proto.InternalMessageInfo

func (m *AddFileRequest) GetFileName() string {
	if m != nil {
		return m.FileName
	}
	return ""
}

type AddFileResponse struct {
	Filename             string   `protobuf:"bytes,1,opt,name=Filename,proto3" json:"Filename,omitempty"`
	Response             bool     `protobuf:"varint,2,opt,name=Response,proto3" json:"Response,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddFileResponse) Reset()         { *m = AddFileResponse{} }
func (m *AddFileResponse) String() string { return proto.CompactTextString(m) }
func (*AddFileResponse) ProtoMessage()    {}
func (*AddFileResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a884755cc01e392a, []int{4}
}

func (m *AddFileResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddFileResponse.Unmarshal(m, b)
}
func (m *AddFileResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddFileResponse.Marshal(b, m, deterministic)
}
func (m *AddFileResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddFileResponse.Merge(m, src)
}
func (m *AddFileResponse) XXX_Size() int {
	return xxx_messageInfo_AddFileResponse.Size(m)
}
func (m *AddFileResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddFileResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddFileResponse proto.InternalMessageInfo

func (m *AddFileResponse) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

func (m *AddFileResponse) GetResponse() bool {
	if m != nil {
		return m.Response
	}
	return false
}

type AddBlockRequest struct {
	Data                 []string `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	Macid                string   `protobuf:"bytes,2,opt,name=macid,proto3" json:"macid,omitempty"`
	Filename             string   `protobuf:"bytes,3,opt,name=filename,proto3" json:"filename,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddBlockRequest) Reset()         { *m = AddBlockRequest{} }
func (m *AddBlockRequest) String() string { return proto.CompactTextString(m) }
func (*AddBlockRequest) ProtoMessage()    {}
func (*AddBlockRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a884755cc01e392a, []int{5}
}

func (m *AddBlockRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddBlockRequest.Unmarshal(m, b)
}
func (m *AddBlockRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddBlockRequest.Marshal(b, m, deterministic)
}
func (m *AddBlockRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddBlockRequest.Merge(m, src)
}
func (m *AddBlockRequest) XXX_Size() int {
	return xxx_messageInfo_AddBlockRequest.Size(m)
}
func (m *AddBlockRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddBlockRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddBlockRequest proto.InternalMessageInfo

func (m *AddBlockRequest) GetData() []string {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *AddBlockRequest) GetMacid() string {
	if m != nil {
		return m.Macid
	}
	return ""
}

func (m *AddBlockRequest) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

type AddBlockResponse struct {
	Hash                 string   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Data                 []string `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	Macid                string   `protobuf:"bytes,3,opt,name=macid,proto3" json:"macid,omitempty"`
	Filename             string   `protobuf:"bytes,4,opt,name=filename,proto3" json:"filename,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddBlockResponse) Reset()         { *m = AddBlockResponse{} }
func (m *AddBlockResponse) String() string { return proto.CompactTextString(m) }
func (*AddBlockResponse) ProtoMessage()    {}
func (*AddBlockResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a884755cc01e392a, []int{6}
}

func (m *AddBlockResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddBlockResponse.Unmarshal(m, b)
}
func (m *AddBlockResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddBlockResponse.Marshal(b, m, deterministic)
}
func (m *AddBlockResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddBlockResponse.Merge(m, src)
}
func (m *AddBlockResponse) XXX_Size() int {
	return xxx_messageInfo_AddBlockResponse.Size(m)
}
func (m *AddBlockResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddBlockResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddBlockResponse proto.InternalMessageInfo

func (m *AddBlockResponse) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *AddBlockResponse) GetData() []string {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *AddBlockResponse) GetMacid() string {
	if m != nil {
		return m.Macid
	}
	return ""
}

func (m *AddBlockResponse) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

type SpinOffRequest struct {
	Macid                string   `protobuf:"bytes,1,opt,name=macid,proto3" json:"macid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SpinOffRequest) Reset()         { *m = SpinOffRequest{} }
func (m *SpinOffRequest) String() string { return proto.CompactTextString(m) }
func (*SpinOffRequest) ProtoMessage()    {}
func (*SpinOffRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a884755cc01e392a, []int{7}
}

func (m *SpinOffRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpinOffRequest.Unmarshal(m, b)
}
func (m *SpinOffRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpinOffRequest.Marshal(b, m, deterministic)
}
func (m *SpinOffRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpinOffRequest.Merge(m, src)
}
func (m *SpinOffRequest) XXX_Size() int {
	return xxx_messageInfo_SpinOffRequest.Size(m)
}
func (m *SpinOffRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SpinOffRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SpinOffRequest proto.InternalMessageInfo

func (m *SpinOffRequest) GetMacid() string {
	if m != nil {
		return m.Macid
	}
	return ""
}

type SpinOffResponse struct {
	Macid                string   `protobuf:"bytes,1,opt,name=macid,proto3" json:"macid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SpinOffResponse) Reset()         { *m = SpinOffResponse{} }
func (m *SpinOffResponse) String() string { return proto.CompactTextString(m) }
func (*SpinOffResponse) ProtoMessage()    {}
func (*SpinOffResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a884755cc01e392a, []int{8}
}

func (m *SpinOffResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpinOffResponse.Unmarshal(m, b)
}
func (m *SpinOffResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpinOffResponse.Marshal(b, m, deterministic)
}
func (m *SpinOffResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpinOffResponse.Merge(m, src)
}
func (m *SpinOffResponse) XXX_Size() int {
	return xxx_messageInfo_SpinOffResponse.Size(m)
}
func (m *SpinOffResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SpinOffResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SpinOffResponse proto.InternalMessageInfo

func (m *SpinOffResponse) GetMacid() string {
	if m != nil {
		return m.Macid
	}
	return ""
}

func init() {
	proto.RegisterType((*File)(nil), "proto.File")
	proto.RegisterType((*Block)(nil), "proto.Block")
	proto.RegisterType((*SpinOff)(nil), "proto.SpinOff")
	proto.RegisterType((*AddFileRequest)(nil), "proto.AddFileRequest")
	proto.RegisterType((*AddFileResponse)(nil), "proto.AddFileResponse")
	proto.RegisterType((*AddBlockRequest)(nil), "proto.AddBlockRequest")
	proto.RegisterType((*AddBlockResponse)(nil), "proto.AddBlockResponse")
	proto.RegisterType((*SpinOffRequest)(nil), "proto.SpinOffRequest")
	proto.RegisterType((*SpinOffResponse)(nil), "proto.SpinOffResponse")
}

func init() { proto.RegisterFile("proto/blockchain.proto", fileDescriptor_a884755cc01e392a) }

var fileDescriptor_a884755cc01e392a = []byte{
	// 364 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x52, 0xc1, 0x4e, 0x83, 0x40,
	0x10, 0xed, 0x16, 0x68, 0xeb, 0x44, 0x5b, 0xb3, 0xd1, 0x4a, 0xb8, 0xd8, 0x10, 0xa3, 0x3d, 0x98,
	0x9a, 0xe8, 0xcd, 0x4b, 0x63, 0x0f, 0xc6, 0x5e, 0x34, 0xa1, 0x07, 0xcf, 0xdb, 0xb2, 0x4d, 0x89,
	0x14, 0xb0, 0xa0, 0xf1, 0xea, 0xef, 0xf9, 0x55, 0x66, 0x06, 0x76, 0xa1, 0x88, 0x27, 0x76, 0x66,
	0xde, 0xdb, 0x79, 0xef, 0xb1, 0x30, 0x4c, 0x76, 0x71, 0x16, 0xdf, 0x2c, 0xc3, 0x78, 0xf5, 0xb6,
	0xda, 0x88, 0x20, 0x9a, 0x50, 0x83, 0x5b, 0xf4, 0x71, 0x1d, 0x30, 0x1f, 0x83, 0x50, 0x72, 0x0e,
	0x66, 0x24, 0xb6, 0xd2, 0x66, 0x23, 0x36, 0x3e, 0xf0, 0xe8, 0xec, 0x7e, 0x33, 0xb0, 0x66, 0xc8,
	0xe3, 0x27, 0x60, 0xcd, 0x23, 0x5f, 0x7e, 0xd1, 0xd8, 0xf0, 0xf2, 0x02, 0x39, 0x1b, 0x91, 0x6e,
	0x6c, 0x23, 0xe7, 0xe0, 0x99, 0x5f, 0xc0, 0x51, 0xb2, 0x93, 0x9f, 0x44, 0x7b, 0xc2, 0xa1, 0x49,
	0xc3, 0xfd, 0x26, 0x32, 0x7d, 0x91, 0x09, 0xdb, 0x1a, 0x19, 0xc8, 0xc4, 0x33, 0xee, 0xd8, 0x8a,
	0x55, 0xe0, 0xdb, 0x1d, 0x62, 0xe4, 0x85, 0x7b, 0x0e, 0xdd, 0x45, 0x12, 0x44, 0x2f, 0xeb, 0x75,
	0x09, 0x60, 0x55, 0xc0, 0x35, 0xf4, 0x1f, 0x7c, 0x1f, 0x3d, 0x78, 0xf2, 0xfd, 0x43, 0xa6, 0x19,
	0x77, 0xa0, 0xb7, 0x0e, 0x42, 0xf9, 0x5c, 0xda, 0xd1, 0xb5, 0x3b, 0x87, 0x81, 0x46, 0xa7, 0x49,
	0x1c, 0xa5, 0x12, 0xe1, 0x58, 0x57, 0xdc, 0xeb, 0x1a, 0x67, 0x0a, 0x67, 0xb7, 0x47, 0x6c, 0xdc,
	0xf3, 0x74, 0xed, 0xbe, 0xd2, 0x55, 0xe4, 0x49, 0x6d, 0x56, 0xb6, 0x58, 0x93, 0xad, 0x76, 0x45,
	0xb5, 0xd2, 0x48, 0x4b, 0x8d, 0x52, 0x23, 0xc5, 0x1e, 0xc2, 0x71, 0x79, 0x71, 0x21, 0x52, 0x45,
	0xcd, 0x2a, 0x51, 0xab, 0x6d, 0xed, 0xa6, 0x6d, 0xc6, 0x7f, 0xdb, 0xcc, 0xda, 0xb6, 0x4b, 0xe8,
	0x17, 0x01, 0x2b, 0x17, 0xcd, 0x39, 0x5f, 0xc1, 0x40, 0xe3, 0x0a, 0x51, 0x8d, 0xc0, 0xdb, 0x1f,
	0x06, 0x30, 0xd3, 0xaf, 0x8d, 0xdf, 0x43, 0xb7, 0x48, 0x9c, 0x9f, 0xe6, 0x4f, 0x6f, 0xb2, 0xff,
	0xbf, 0x9c, 0x61, 0xbd, 0x5d, 0x04, 0xdc, 0xe2, 0x53, 0xe8, 0xa9, 0x24, 0x78, 0x05, 0x55, 0xcd,
	0xdc, 0x39, 0xfb, 0xd3, 0x57, 0xf4, 0x31, 0xe3, 0x53, 0x38, 0x5c, 0x64, 0x62, 0x97, 0xa9, 0x27,
	0xa4, 0x14, 0xec, 0x3b, 0xd6, 0x0a, 0x6a, 0x06, 0xdd, 0xd6, 0xb2, 0x43, 0x83, 0xbb, 0xdf, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x43, 0x71, 0x6b, 0x74, 0x46, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BlockchainClient is the client API for Blockchain service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BlockchainClient interface {
	AddFile(ctx context.Context, in *AddFileRequest, opts ...grpc.CallOption) (*AddFileResponse, error)
	AddBlock(ctx context.Context, opts ...grpc.CallOption) (Blockchain_AddBlockClient, error)
	StartSpinOff(ctx context.Context, in *SpinOffRequest, opts ...grpc.CallOption) (*SpinOffResponse, error)
}

type blockchainClient struct {
	cc *grpc.ClientConn
}

func NewBlockchainClient(cc *grpc.ClientConn) BlockchainClient {
	return &blockchainClient{cc}
}

func (c *blockchainClient) AddFile(ctx context.Context, in *AddFileRequest, opts ...grpc.CallOption) (*AddFileResponse, error) {
	out := new(AddFileResponse)
	err := c.cc.Invoke(ctx, "/proto.Blockchain/AddFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockchainClient) AddBlock(ctx context.Context, opts ...grpc.CallOption) (Blockchain_AddBlockClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Blockchain_serviceDesc.Streams[0], "/proto.Blockchain/AddBlock", opts...)
	if err != nil {
		return nil, err
	}
	x := &blockchainAddBlockClient{stream}
	return x, nil
}

type Blockchain_AddBlockClient interface {
	Send(*AddBlockRequest) error
	CloseAndRecv() (*AddBlockResponse, error)
	grpc.ClientStream
}

type blockchainAddBlockClient struct {
	grpc.ClientStream
}

func (x *blockchainAddBlockClient) Send(m *AddBlockRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *blockchainAddBlockClient) CloseAndRecv() (*AddBlockResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(AddBlockResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *blockchainClient) StartSpinOff(ctx context.Context, in *SpinOffRequest, opts ...grpc.CallOption) (*SpinOffResponse, error) {
	out := new(SpinOffResponse)
	err := c.cc.Invoke(ctx, "/proto.Blockchain/StartSpinOff", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BlockchainServer is the server API for Blockchain service.
type BlockchainServer interface {
	AddFile(context.Context, *AddFileRequest) (*AddFileResponse, error)
	AddBlock(Blockchain_AddBlockServer) error
	StartSpinOff(context.Context, *SpinOffRequest) (*SpinOffResponse, error)
}

// UnimplementedBlockchainServer can be embedded to have forward compatible implementations.
type UnimplementedBlockchainServer struct {
}

func (*UnimplementedBlockchainServer) AddFile(ctx context.Context, req *AddFileRequest) (*AddFileResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddFile not implemented")
}
func (*UnimplementedBlockchainServer) AddBlock(srv Blockchain_AddBlockServer) error {
	return status.Errorf(codes.Unimplemented, "method AddBlock not implemented")
}
func (*UnimplementedBlockchainServer) StartSpinOff(ctx context.Context, req *SpinOffRequest) (*SpinOffResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StartSpinOff not implemented")
}

func RegisterBlockchainServer(s *grpc.Server, srv BlockchainServer) {
	s.RegisterService(&_Blockchain_serviceDesc, srv)
}

func _Blockchain_AddFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockchainServer).AddFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Blockchain/AddFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockchainServer).AddFile(ctx, req.(*AddFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Blockchain_AddBlock_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(BlockchainServer).AddBlock(&blockchainAddBlockServer{stream})
}

type Blockchain_AddBlockServer interface {
	SendAndClose(*AddBlockResponse) error
	Recv() (*AddBlockRequest, error)
	grpc.ServerStream
}

type blockchainAddBlockServer struct {
	grpc.ServerStream
}

func (x *blockchainAddBlockServer) SendAndClose(m *AddBlockResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *blockchainAddBlockServer) Recv() (*AddBlockRequest, error) {
	m := new(AddBlockRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Blockchain_StartSpinOff_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SpinOffRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockchainServer).StartSpinOff(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Blockchain/StartSpinOff",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockchainServer).StartSpinOff(ctx, req.(*SpinOffRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Blockchain_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Blockchain",
	HandlerType: (*BlockchainServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddFile",
			Handler:    _Blockchain_AddFile_Handler,
		},
		{
			MethodName: "StartSpinOff",
			Handler:    _Blockchain_StartSpinOff_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "AddBlock",
			Handler:       _Blockchain_AddBlock_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "proto/blockchain.proto",
}
